# LICENSE UPL 1.0
#
# Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.
#
ARG BASE_IMAGE=oraclelinux:7-slim
FROM ${BASE_IMAGE} as WLS_BUILD
USER root

ARG JAVA_PKG
ARG WLS_PKG
ARG JAVA_HOME
ARG INV_LOC
ARG WLS_RESP
ARG MW_HOME
ARG ORAINST
ARG TMPDIR
ARG PATCHDIR
ARG WDT_MODEL

ENV JAVA_PKG=${JAVA_PKG:-jdk-*-linux-x64.tar.gz} \
    WLS_PKG=${WLS_PKG:-fmw_12.2.1.3.0_wls_Disk1_1of1.zip} \
    JAVA_HOME=${JAVA_HOME:-/u01/jdk} \
    INV_LOC=${INV_LOC:-/u01/app/oraInventory} \
    WLS_RESP=${WLS_RESP:-wls.rsp} \
    MW_HOME=${MW_HOME:-/u01/app/oracle/middleware} \
    ORAINST=${ORAINST:-oraInst.loc} \
    TMPDIR=${TMPDIR:-/tmp/delme} \
    OPATCH_NO_FUSER=true \
    PATCHDIR=${PATCHDIR:-patches} \
    WDT_MODEL=${WDT_MODEL:-}

RUN echo "JAVA_PKG=$JAVA_PKG WLS_PKG=$WLS_PKG PATCHDIR=$PATCHDIR HTTP_PROXY=$HTTPY_PROXY HTTPS_PROXY=$HTTPS_PROXY"

# install necessary packages
RUN yum -y update \
 && yum -y install sudo nc tar gunzip zip git unzip

# Create oracle user
RUN groupadd -g 1000 oinstall \
 && useradd -u 1100 -g oinstall oracle \
 && mkdir -p $MW_HOME \
 && mkdir -p $INV_LOC \
 && mkdir $TMPDIR \
 && chown -R oracle:oinstall /u01/ \
 && chown -R oracle:oinstall $TMPDIR/

USER oracle

# Install base WLS
COPY $JAVA_PKG $WLS_PKG $WLS_RESP $TMPDIR/
COPY $ORAINST $INV_LOC

RUN tar xzvf $TMPDIR/$JAVA_PKG -C /u01 \
 && mv /u01/jdk1.8* $JAVA_HOME \
 && unzip $TMPDIR/$WLS_PKG -d $TMPDIR \
 && $JAVA_HOME/bin/java -Xmx1024m -jar $TMPDIR/fmw_*.jar -silent ORACLE_HOME=$MW_HOME \
    -responseFile $TMPDIR/$WLS_RESP -invPtrLoc $INV_LOC/$ORAINST

# Prep for patches and install latest opatch
RUN mkdir -p $TMPDIR/patches \
 && mkdir -p $TMPDIR/psu \
 && mkdir -p $TMPDIR/opatch \
 && chown oracle:oinstall $TMPDIR/

COPY p28186730_139400_Generic.zip $TMPDIR/opatch

COPY $PATCHDIR/* $TMPDIR/patches/

RUN unzip $TMPDIR/opatch/p28186730_139400_Generic.zip -d $TMPDIR/opatch ; \
    /u01/jdk/bin/java -jar $TMPDIR/opatch/6880880/opatch_generic.jar -silent \
    oracle_home=$MW_HOME  -invPtrLoc $INV_LOC/$ORAINST

# OPatch apply
RUN for file in $TMPDIR/patches/*.zip ; do [ -e "$file" ] || continue ; \
    (cd $TMPDIR/patches ; mkdir newpatch ; unzip $file -d newpatch ; cd newpatch/* ; \
    $MW_HOME/OPatch/opatch apply -silent ; cd ../../ ; rm -fr newpatch ); \
    done

# Clone WDT
RUN curl -s -o $TMPDIR/maven.tar.gz \
    http://mirror.cogentco.com/pub/apache/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz \
 && tar xzvf $TMPDIR/maven.tar.gz -C /u01 \
 && export JAVA_HOME=$JAVA_HOME \
 && mkdir -p /u01/app/tools/wdt \
 && cd /u01/app/tools/wdt \
 && git clone https://github.com/oracle/weblogic-deploy-tooling.git \
 && cd /u01/app/tools/wdt/weblogic-deploy-tooling \
 && mkdir -p $TMPDIR/repo \
 && /u01/apache-maven-3.5.4/bin/mvn -Dmaven.repo.local=$TMPDIR/repo -DskipTests -Dunit-test-wlst-dir=$MW_HOME clean install \
 && unzip /u01/app/tools/wdt/weblogic-deploy-tooling/installer/target/weblogic-deploy.zip -d /u01/app/tools

# Create domain and deploy
#RUN /u01/app/tools/weblogic-deploy/bin/createDomain.sh ...

# Cleanup
RUN $MW_HOME/OPatch/opatch util cleanup -invPtrLoc $INV_LOC/$ORAINST -silent \
 && rm -fr $TMPDIR

ENTRYPOINT /bin/bash

